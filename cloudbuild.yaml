steps:
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: bash
    args:
      - -c
      - |
        echo "‚è≥ Checking current trigger against watched triggers..."

        WATCHED_TRIGGERS=("trigger-1" "trigger-2" "trigger-3")
        CURRENT_TRIGGER="$${_TRIGGER_NAME:-trigger-2}"
        echo "‚ÑπÔ∏è Current Trigger: $$CURRENT_TRIGGER"

        # Fetch current build ID and start time
        CURRENT_BUILD_INFO=$$(gcloud builds list --region=asia-south1 \
          --filter="substitutions.TRIGGER_NAME=$$CURRENT_TRIGGER" \
          --sort-by="~createTime" --limit=1 \
          --format="value(id,createTime)")
        CURRENT_BUILD_ID=$$(echo "$$CURRENT_BUILD_INFO" | awk '{print $$1}')
        CURRENT_START_TIME=$$(echo "$$CURRENT_BUILD_INFO" | awk '{print $$2}')
        echo "‚è∞ Current build $$CURRENT_BUILD_ID started at: $$CURRENT_START_TIME"

        # Check if current trigger started earlier than all others
        SKIP_WAIT="true"
        for TRIGGER in "$${WATCHED_TRIGGERS[@]}"; do
          if [[ "$$TRIGGER" == "$$CURRENT_TRIGGER" ]]; then
            continue
          fi
          LATEST_BUILD=$$(gcloud builds list --region=asia-south1 \
            --filter="substitutions.TRIGGER_NAME=$$TRIGGER" \
            --sort-by="~createTime" --limit=1 \
            --format="value(id,createTime,status)")
          if [[ -n "$$LATEST_BUILD" ]]; then
            OTHER_START=$$(echo "$$LATEST_BUILD" | awk '{print $$2}')
            if [[ "$$OTHER_START" < "$$CURRENT_START_TIME" ]]; then
              SKIP_WAIT="false"
              break
            fi
          fi
        done

        if [[ "$$SKIP_WAIT" == "true" ]]; then
          echo "‚úÖ Current trigger started earliest ‚Üí skipping wait logic."
          exit 0
        fi

        echo "‚ö†Ô∏è Current trigger not earliest ‚Üí executing wait logic for earlier triggers..."

        wait_for_build() {
          local TRIGGER_NAME=$$1
          local BUILD_ID=$$2
          while true; do
            STATUS=$$(gcloud builds describe $$BUILD_ID --region=asia-south1 --format="value(status)")
            if [[ "$$STATUS" == "SUCCESS" || "$$STATUS" == "FAILURE" || "$$STATUS" == "CANCELLED" ]]; then
              echo "üîπ $$TRIGGER_NAME build $$BUILD_ID finished with $$STATUS"
              break
            fi
            echo "‚è± $$TRIGGER_NAME build $$BUILD_ID still running, waiting 15s..."
            sleep 15
          done
          if [[ "$$STATUS" == "SUCCESS" ]]; then
            echo "‚úÖ $$TRIGGER_NAME succeeded. Waiting 90 seconds..."
            sleep 90
          else
            echo "‚ö†Ô∏è $$TRIGGER_NAME failed/cancelled. Waiting 30 seconds..."
            sleep 30
          fi
        }

        # Wait for all earlier triggers
        for TRIGGER in "$${WATCHED_TRIGGERS[@]}"; do
          if [[ "$$TRIGGER" == "$$CURRENT_TRIGGER" ]]; then
            continue
          fi
          BUILD_INFO=$$(gcloud builds list --region=asia-south1 \
            --filter="substitutions.TRIGGER_NAME=$$TRIGGER" \
            --sort-by="~createTime" --limit=1 \
            --format="value(id,createTime,status)")
          if [[ -z "$$BUILD_INFO" ]]; then
            echo "‚ÑπÔ∏è No previous build found for $$TRIGGER, skipping."
            continue
          fi
          BUILD_ID=$$(echo "$$BUILD_INFO" | awk '{print $$1}')
          BUILD_START=$$(echo "$$BUILD_INFO" | awk '{print $$2}')
          BUILD_STATUS=$$(echo "$$BUILD_INFO" | awk '{print $$3}')

          if [[ "$$BUILD_START" < "$$CURRENT_START_TIME" ]]; then
            echo "‚è≥ $$TRIGGER started before current build at $$BUILD_START (status: $$BUILD_STATUS)"
            if [[ "$$BUILD_STATUS" == "WORKING" || "$$BUILD_STATUS" == "QUEUED" ]]; then
              wait_for_build "$$TRIGGER" "$$BUILD_ID"
            else
              if [[ "$$BUILD_STATUS" == "SUCCESS" ]]; then
                echo "‚úÖ $$TRIGGER already succeeded. Waiting 90 seconds..."
                sleep 90
              else
                echo "‚ö†Ô∏è $$TRIGGER already failed/cancelled. Waiting 30 seconds..."
                sleep 30
              fi
            fi
          fi
        done

  - name: 'gcr.io/cloud-builders/docker'
    args:
      ['build', '-t', 'asia-south1-docker.pkg.dev/divine-course-470809-f6/deploy-to-cloudrun/cloudrun-app:latest', '.']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      ['push', 'asia-south1-docker.pkg.dev/divine-course-470809-f6/deploy-to-cloudrun/cloudrun-app:latest']

timeout: 1200s
options:
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _TRIGGER_NAME: "trigger-2"
