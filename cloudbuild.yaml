steps:
  # Step 1: Wait for specific triggers to finish (max 5 minutes)
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: bash
    args:
      - -c
      - |
        echo "‚è≥ Checking if selected triggers are running before starting build..."
        PROJECT_ID=$(gcloud config get-value project)

        # üëá Specify the triggers you want to wait for
        WATCHED_TRIGGERS=("trigger-1" "trigger-2" "trigger-3")

        TIMEOUT=300  # 5 minutes
        START_TIME=$(date +%s)

        while true; do
          # Get ongoing builds with trigger name filter
          RUNNING_BUILDS=$(gcloud builds list --ongoing \
            --format="value(id,substitutions.TRIGGER_NAME)")

          # Filter to only watched triggers
          MATCHED_BUILDS=$(echo "$RUNNING_BUILDS" | grep -E "$(IFS=\|; echo "${WATCHED_TRIGGERS[*]}")" || true)

          if [[ -z "$MATCHED_BUILDS" ]]; then
            echo "‚úÖ None of the watched triggers are running. Proceeding..."
            break
          fi

          echo "üîÑ Found running builds for watched triggers:"
          echo "$MATCHED_BUILDS"

          CURRENT_TIME=$(date +%s)
          ELAPSED=$((CURRENT_TIME - START_TIME))

          if [[ $ELAPSED -ge $TIMEOUT ]]; then
            echo "‚ö†Ô∏è Timeout reached (5 minutes). Proceeding with build anyway..."
            break
          fi

          echo "Sleeping 30 seconds before checking again..."
          sleep 30
        done

  # Step 2: Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build', '-t',
        'asia-south1-docker.pkg.dev/divine-course-470809-f6/deploy-to-cloudrun/cloudrun-app:latest',
        '.'
      ]

  # Step 3: Docker Push
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'asia-south1-docker.pkg.dev/divine-course-470809-f6/deploy-to-cloudrun/cloudrun-app:latest'
      ]


timeout: 1200s
options:
  logging: CLOUD_LOGGING_ONLY
